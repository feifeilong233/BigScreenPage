<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qingfeng.system.mapper.DictionaryMapper">

    <!--数据权限-->
    <sql id="authPageSql">
        <!-- 数据权限 -->
        <if test="(obj.auth_organize_ids == null or obj.auth_organize_ids.size == 0) and (obj.auth_user != null and obj.auth_user != '')">
            and a.create_user=#{obj.auth_user}
        </if>
        <if test="obj.auth_organize_ids != null and obj.auth_organize_ids.size > 0">
            and (a.create_user=#{obj.auth_user} or a.create_organize in
            <foreach collection="obj.auth_organize_ids" item="organize_id" open="(" separator="," close=")">
                #{organize_id}
            </foreach>
            )
        </if>
    </sql>
    <sql id="authPdSql">
        <!-- 数据权限 -->
        <if test="(auth_organize_ids == null or auth_organize_ids.size == 0) and (auth_user != null and auth_user != '')">
            and a.create_user=#{auth_user}
        </if>
        <if test="auth_organize_ids != null and auth_organize_ids.size > 0">
            and (a.create_user=#{auth_user} or a.create_organize in
            <foreach collection="auth_organize_ids" item="organize_id" open="(" separator="," close=")">
                #{organize_id}
            </foreach>
            )
        </if>
    </sql>

    <select id="findListPage" parameterType="Dictionary" resultType="Dictionary">
        select
            a.id as "id",
            a.type as "type",
            a.dic_cascade as "dic_cascade",
            a.name as "name",
            a.short_name as "short_name",
            a.code as "code",
            a.parent_id as "parent_id",
            a.level_num as "level_num",
            a.status as "status",
            a.order_by as "order_by",
            a.remark as "remark",
            a.create_time as "create_time",
            a.create_user as "create_user",
            a.create_organize as "create_organize",
            a.update_user as "update_user",
            a.update_time as "update_time",
            b.name as "parent_name",
            ifnull(c.num,0) as "child_num"
            from system_dictionary a
            left join system_dictionary b on a.parent_id = b.id
            left join (
                select
                count(*) as "num",
                a.parent_id as "parent_id"
                from system_dictionary a
                group by a.parent_id
            ) c on a.id=c.parent_id
            where 1=1
            <if test="obj.name != null and obj.name != ''">
                and a.name like concat('%',concat(#{obj.name},'%'))
            </if>
            <if test="obj.short_name != null and obj.short_name != ''">
                and a.short_name like concat('%',concat(#{obj.short_name},'%'))
            </if>
            <if test="obj.dic_cascade != null and obj.dic_cascade != ''">
                and a.dic_cascade like concat('%',concat(#{obj.dic_cascade},'%'))
            </if>
            <if test="obj.parent_id != null and obj.parent_id != ''">
                and a.parent_id = #{obj.parent_id}
            </if>
            <if test="obj.type != null and obj.type != ''">
                and a.type = #{obj.type}
            </if>
            <if test="obj.status != null and obj.status != ''">
                and a.status = #{obj.status}
            </if>
            <if test="obj.level_num != null and obj.level_num != ''">
                and a.level_num <![CDATA[ <= ]]> #{obj.level_num}
            </if>
            <include refid="authPageSql"></include>
            order by a.order_by+0 asc , a.create_time desc
    </select>


    <!--查询列表-->
    <select id="findList" parameterType="Dictionary" resultType="Dictionary">
        select
            a.id as "id",
            a.type as "type",
            a.dic_cascade as "dic_cascade",
            a.name as "name",
            a.short_name as "short_name",
            a.code as "code",
            a.parent_id as "parent_id",
            a.level_num as "level_num",
            a.status as "status",
            a.order_by as "order_by",
            a.remark as "remark",
            a.create_time as "create_time",
            a.create_user as "create_user",
            a.create_organize as "create_organize",
            a.update_user as "update_user",
            a.update_time as "update_time",
            b.name as "parent_name",
            ifnull(c.num,0) as "child_num"
            from system_dictionary a
            left join system_dictionary b on a.parent_id = b.id
            left join (
            select
            count(*) as "num",
            a.parent_id as "parent_id"
            from system_dictionary a
            group by a.parent_id
            ) c on a.id=c.parent_id
            where 1=1
            <if test="name != null and name != ''">
                and a.name like concat('%',concat(#{name},'%'))
            </if>
            <if test="short_name != null and short_name != ''">
                and a.short_name like concat('%',concat(#{short_name},'%'))
            </if>
            <if test="dic_cascade != null and dic_cascade != ''">
                and a.dic_cascade like concat('%',concat(#{dic_cascade},'%'))
            </if>
            <if test="parent_id != null and parent_id != ''">
                and a.parent_id = #{parent_id}
            </if>
            <if test="type != null and type != ''">
                and a.type = #{type}
            </if>
            <if test="status != null and status != ''">
                and a.status = #{status}
            </if>
            <if test="level_num != null and level_num != ''">
                and a.level_num <![CDATA[ <= ]]> #{level_num}
            </if>
            <if test="parent_code != null and parent_code != ''">
                and a.parent_id = (select id from system_dictionary where code=#{parent_code} limit 1)
            </if>
            <if test="codes != null and codes.size > 0">
                and a.code in
                <foreach collection="codes" item="code" open="(" separator="," close=")">
                    #{code}
                </foreach>
            </if>
            <if test="ids != null and ids.size > 0">
                and a.id in
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <include refid="authPdSql"></include>
            order by a.order_by+0 asc , a.create_time desc
    </select>


</mapper>